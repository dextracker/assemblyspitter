var p=require("vscode"),d=require("path"),r=require("fs");function b(c){let f=p.commands.registerCommand("assemblyspitter.findAssembly",async()=>{let o=p.workspace.workspaceFolders[0].uri.fsPath;console.log("Workspace Root:",o);let n=d.join(o,"assembly_snippets.md"),e="",s=[],t=h(o);if(t){console.log(`.scope file found at: ${t}`);let i=r.readFileSync(t,"utf-8");console.log(`Contents of .scope file: ${i}`);let a=i.split(`
`).map(l=>l.trim()).filter(l=>l!=="");for(let l of a){console.log(`Searching for Solidity files in: ${l}`);let u=g(l,o);console.log("Files",u),console.log("path",l),s.push(...u),s.push()}}else console.log(".scope file not found. Proceeding with default behavior."),s=await p.workspace.findFiles("**/*.sol");if(console.log(`Found ${s.length} Solidity files.`),s.length===0){p.window.showInformationMessage("No Solidity files found.");return}for(let i of s){let a=await p.workspace.openTextDocument(i),l=await w(a);if(console.log("assemblySnippets",l),l.length>0){let u=d.basename(i.path?i.path:i);e+=`## ${u}

`;for(let y of l)e+="```solidity\n",e+=y+`
`,e+="```\n\n";let m=a.getText();console.log(`Contents of ${u}:
${m}`)}}console.log(`Writing Markdown content to file: ${n}`),r.writeFileSync(n,e,"utf8"),console.log(`Assembly snippets saved to ${n}`),p.window.showInformationMessage(`Assembly snippets saved to ${n}`)});c.subscriptions.push(f),console.log("Extension activated.")}async function w(c){let f=[],o=!1,n=0,e=[],s=()=>{if(e.length>0){let t=e.join(`
`);f.push(t),e=[]}};for(let t=0;t<c.lineCount;t++){let i=c.lineAt(t).text;if(!o&&i.match(/\bassembly\s*{/)){o=!0,n=1,e.push(i);continue}if(o){e.push(i);let a=(i.match(/{/g)||[]).length,l=(i.match(/}/g)||[]).length;n+=a-l,n===0&&(s(),o=!1)}}return o&&s(),f}function g(c,f){console.log(`Exploring subfolder: ${f}`);let o=[],n=r.readdirSync(f);for(let e of n){let s=d.join(f,e);if(r.lstatSync(s).isDirectory()){let t=g(c,s);o.push(...t)}else s.endsWith(".sol")&&s.includes(c)&&o.push(s)}return o}function h(c,f=0){console.log(`Exploring directory: ${c}`);let o=d.join(c,".scope");if(r.existsSync(o)){console.log(`.scope file found at: ${o}`);let n=r.readFileSync(o,"utf-8");return console.log(`Contents of .scope file: ${n}`),o}else if(f===0){let n=r.readdirSync(c);for(let e of n){let s=d.join(c,e);if(r.lstatSync(s).isDirectory()){let t=h(s,f+1);if(t)return t}}}return null}module.exports={activate:b};
